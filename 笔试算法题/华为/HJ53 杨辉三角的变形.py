"""
HJ53 杨辉三角的变形

描述


以上三角形的数阵，第一行只有一个数1，以下每行的每个数，是恰好是它上面的数、左上角数和右上角的数，3个数之和（如果不存在某个数，认为该数就是0）。
           1
        1  1  1
     1  2  3  2  1
   1 3  6  7  6  3  1
  1 4 10 16 19 16 10 4 1

求第n行第一个偶数出现的位置。如果没有偶数，则输出-1。例如输入3,则输出2，输入4则输出3。

数据范围： 1≤n≤1000000000(10的9次方)


本题有多组输入数据
输入描述：
输入一个int整数

输出描述：
输出返回的int值

示例1
输入：
4
2
复制
输出：
3
-1

解题思路：
https://chowdera.com/2021/08/20210830014700850m.html
本题两种解题思路。
第一种就是常规求解，见代码一。输入k行，按照杨辉三角的规律创建k行的三角数阵，然后在第k行寻找首次出现偶数的下标即可。
(1≤n≤1000000000(10的9次方), 此种方式效率会有问题)
第二种就是找规律求解，见代码二。
很多同学可能第一印象会被这个 变形的杨辉三角影响到. 其实我们只要关注数据的奇偶数规律即可
题目说我们要找到一个出现偶数的位置.
前两行为-1，从第三行开始有2324的循环，所以当行数为奇数，结果就为2；当行数被4整除，结果为3；其他就为4。
"""

input_seq = ['4', '2']


def execute(n):
    if n == 1 or n == 2:
        return -1
    else:
        mod = n % 4
        if mod == 1 or mod == 3:
            return 2
        elif mod == 0:
            return 3
        elif mod == 2:
            return 4


def yanghui_triangle(seq):
    output_seq = []
    for n in seq:
        output_seq.append(execute(int(n)))
    for item in output_seq:
        print(item)


yanghui_triangle(input_seq)
